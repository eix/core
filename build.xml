<?xml version="1.0" encoding="UTF-8"?>
<project default="build">
	<!-- Phing build script for libraries -->

	<!-- Set common properties -->
	<property name="repository" value="/mnt/workspace/nohex-repository" />
	<property name="srcDir" value="src/php" />
	<property name="mainSrcDir" value="${srcDir}/main" />
	<property name="testDir" value="${srcDir}/test" />
	<property name="libDir" value="${srcDir}/lib" />
	<property name="buildDir" value="build" />
	<property name="reportsDir" value="${buildDir}/reports" />
	<property name="targetsDir" value="${buildDir}/targets" />
	<property name="distFileName" value="${phing.project.name}-${version}" />
	<property name="distFileType" value="phar" />

	<!-- Import custom properties -->
	<property file="phing.properties" />

	<!-- Define project file locations and sets -->

	<fileset dir="${srcDir}" id="phpFiles">
		<include name="**/*.php" />
	</fileset>

	<fileset dir="${srcDir}" id="bootstrap">
		<include name="bootstrap.php" />
		<include name="phar_stub.php" />
	</fileset>

	<fileset dir="${srcDir}" id="main">
		<include name="main/**/*.php" />
	</fileset>

	<fileset dir="${srcDir}" id="devel">
		<include name="test/**/*.php" />
	</fileset>

	<fileset dir="${libDir}" id="lib">
		<include name="**.php" />
		<!-- Phars can't have phars within them -->
		<exclude name="**.phar" />
	</fileset>

	<!-- Targets -->

	<target name="getlibs"
		description="Bring in all reported dependencies"
	>
		<!-- If there are dependencies, bring them in. -->
		<if>
			<isset property="libraries" />
			<then>
				<foreach list="${libraries}" param="library" target="getlib" />
			</then>
		</if>
	</target>

	<target name="getlib"
		description="Get a library from the repository"
	>
		<copy file="${repository}/${library}.phar" todir="${libDir}" />
	</target>

	<target name="check"
		description="Ensure code quality"
		depends="getlibs"
	>
		<mkdir dir="${reportsDir}" />

<!--
		<phpcodesniffer
			standard="PSR2"
			format="full"
			docFile="${reportsDir}/codesniffer.log"
			allowedFileExtensions="php js css html"
		>
			<fileset refid="phpFiles" />
		</phpcodesniffer>
-->

		<!-- Measure project size using PHPLOC -->
		<exec executable="phploc" checkreturn="true" level="debug">
			<arg value="--log-csv"/>
			<arg value="${reportsDir}/phploc.csv"/>
			<arg path="${srcDir}"/>
		</exec>
 
		<!-- Calculate software metrics using PHP_Depend -->
		<phpdepend>
			<fileset refid="main" />
			<logger type="jdepend-xml" outfile="${reportsDir}/phpdepend.xml"/>
			<logger type="summary-xml" outfile="${reportsDir}/phpdepend-summary.xml"/>
			<logger type="jdepend-chart" outfile="${reportsDir}/dependencies.svg"/>
			<logger type="overview-pyramid" outfile="${reportsDir}/overview-pyramid.svg"/>
		</phpdepend>
 
		<!-- Perform project mess detection using PHPMD -->
		<phpmd rulesets="codesize,design,naming,unusedcode">
			<fileset refid="phpFiles"/>
			<formatter type="xml" outfile="${reportsDir}/pmd.xml"/>
		</phpmd>

		<!-- Check for duplicate code -->
		<phpcpd minLines="10" minTokens="20">
			<fileset refid="phpFiles"/>
			<formatter type="pmd" outfile="${reportsDir}/pmd-cpd.xml"/>
		</phpcpd>
	
		<!-- Aggregate tool output with PHP_CodeBrowser -->
		<mkdir dir="${reportsDir}/cb" />
		<exec executable="phpcb" logoutput="true" checkreturn="true" level="debug">
			<arg value="--log"/>
			<arg path="${reportsDir}"/>
			<arg value="--source"/>
			<arg path="${srcDir}"/>
			<arg value="--output"/>
			<arg path="${reportsDir}/cb"/>
		</exec>
	</target>

	<target name="test"
		description="Run unit tests"
		depends="check"
	>
		<phpunit
			configuration="phpunit.xml"
			printsummary="true"
		>
			<batchtest>
				<fileset dir="${testDir}">
					<include name="**/*Test.php"/>
				</fileset>
			</batchtest>
		</phpunit>
	</target>

	<target name="clean"
		description="Prepare the build environment"
	>
		<!-- Ensure the build folder is clean -->
		<delete dir="${buildDir}" />
		<!-- Ensure the build folder exists -->
		<mkdir dir="${buildDir}" />
	</target>

	<target name="build"
		description="Wrapper for the _build target"
		depends="clean,test"
	>
		<if>
			<isset property="type" />
			<then>
				<phingcall target="_build" />
			</then>
			<else>
				<foreach list="main,devel" param="type" target="_build" />
			</else>
		</if>
	</target>

	<target name="_build"
		description="Lay out the library files and package them"
	>
		<fail unless="type" msg="No library type is set." />

		<!-- Prepare main target folder. -->
		<property name="targetDir" value="${targetsDir}/${type}" />
		<delete dir="${targetDir}" />
		<mkdir dir="${targetDir}" />
		<copy todir="${targetDir}">
			<fileset refid="bootstrap" />
			<fileset refid="${type}" />
		</copy>

		<!-- All builds other than 'main' produce suffixed files. -->
		<if>
			<not>
				<equals arg1="${type}" arg2="main" />
			</not>
			<then>
				<property name="suffix" value="-${type}" />
			</then>
			<else>
				<property name="suffix" value="" />
			</else>
		</if>

		<!-- Build a phar with the main code and the development code -->
		<property name="distFile" value="${distFileName}${suffix}.${distFileType}" />
		<pharpackage
			destfile="${buildDir}/${distFile}"
			basedir="${targetDir}"
			stub="${targetDir}/phar_stub.php"
			signature="sha512"
		>
			<fileset dir="${targetDir}">
				<include name="**/*" />
			</fileset>

			<metadata>
				<element name="title" value="${phing.project.name}" />
				<element name="description" value="${phing.project.description}" />
				<element name="version" value="${version}" />
				<element name="build" value="${buildDate}" />
				<element name="created" value="${creationDate}" />
				<element name="copyright" value="Nohex (c) 2012-${currentYear}" />
				<element name="authors">
					<element name="Max NoÃ©">
						<element name="e-mail" value="max@nohex.com" />
					</element>
				</element>
			</metadata>
		</pharpackage>
	</target>

	<target name="publish"
		description="Make the packages available in the repository"
		depends="build"
	>
		<copy todir="${repository}">
			<fileset dir="${buildDir}">
				<include name="${distFileName}*.${distFileType}" />
			</fileset>
		</copy>
	</target>
</project>