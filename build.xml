<?xml version="1.0" encoding="UTF-8"?>
<project default="build">
	<!-- Phing build script for libraries -->
	
	<!-- Set common properties -->
	<property name="srcDir" value="src/php" />
	<property name="testDir" value="${srcDir}/test" />
	<property name="buildDir" value="build" />
	<property name="reportsDir" value="${buildDir}/reports" />

	<!-- Define project file locations and sets -->

	<fileset dir="${srcDir}" id="phpFiles">
		<include name="**/*.php" />
	</fileset>

	<fileset dir="${srcDir}" id="main">
		<include name="main/**/*.php" />
	</fileset>

	<fileset dir="${srcDir}" id="devel">
		<include name="test/**/*.php" />
	</fileset>

	<!-- Targets -->

	<target name="getlibs"
		description="Bring in all reported dependencies"
	>
		<!-- If there are dependencies, bring them in. -->
		<composer command="update" />
	</target>

	<target name="check"
		description="Ensure code quality"
		depends="getlibs"
	>
		<mkdir dir="${reportsDir}" />
		<phplint haltonfailure="true">
			<fileset refid="main" />
			<fileset refid="devel" />
		</phplint>
<!--
		<phpcodesniffer
			standard="PSR2"
			format="full"
			docFile="${reportsDir}/codesniffer.log"
			allowedFileExtensions="php js css html"
		>
			<fileset refid="phpFiles" />
		</phpcodesniffer>
-->

		<!-- Measure project size using PHPLOC -->
		<exec executable="phploc" checkreturn="true" level="debug">
			<arg value="--log-csv"/>
			<arg value="${reportsDir}/phploc.csv"/>
			<arg path="${srcDir}"/>
		</exec>
 
		<!-- Calculate software metrics using PHP_Depend -->
		<phpdepend>
			<fileset refid="main" />
			<logger type="jdepend-xml" outfile="${reportsDir}/phpdepend.xml"/>
			<logger type="summary-xml" outfile="${reportsDir}/phpdepend-summary.xml"/>
			<logger type="jdepend-chart" outfile="${reportsDir}/dependencies.svg"/>
			<logger type="overview-pyramid" outfile="${reportsDir}/overview-pyramid.svg"/>
		</phpdepend>
 
		<!-- Perform project mess detection using PHPMD -->
		<phpmd rulesets="codesize,design,naming,unusedcode">
			<fileset refid="phpFiles"/>
			<formatter type="xml" outfile="${reportsDir}/pmd.xml"/>
		</phpmd>

		<!-- Check for duplicate code -->
		<phpcpd minLines="10" minTokens="20">
			<fileset refid="phpFiles"/>
			<formatter type="pmd" outfile="${reportsDir}/pmd-cpd.xml"/>
		</phpcpd>
	
		<!-- Aggregate tool output with PHP_CodeBrowser -->
		<mkdir dir="${reportsDir}/cb" />
		<exec executable="phpcb" logoutput="true" checkreturn="true" level="debug">
			<arg value="--log"/>
			<arg path="${reportsDir}"/>
			<arg value="--source"/>
			<arg path="${srcDir}"/>
			<arg value="--output"/>
			<arg path="${reportsDir}/cb"/>
		</exec>
	</target>

	<target name="clean"
		description="Prepare the build environment"
	>
		<!-- Ensure the build folder is clean -->
		<delete dir="${buildDir}" quiet="true" />
		<!-- Ensure the build folder exists -->
		<mkdir dir="${buildDir}" />
	</target>

	<target name="test"
		description="Run unit tests"
		depends="check,clean"
	>
		<phpunit
			configuration="phpunit.xml"
			printsummary="true"
		>
			<batchtest>
				<fileset dir="${testDir}">
					<include name="**/*Test.php"/>
				</fileset>
			</batchtest>
		</phpunit>
	</target>

	<target name="build"
		description="Package the contents of the library"
		depends="test"
	>
		<composer command="package">
			<arg value="--format=zip" />
			<arg value="--dir=build" />
		</composer>
	</target>

</project>
